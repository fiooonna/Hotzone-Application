{"ast":null,"code":"import _regeneratorRuntime from\"/Users/johnny/hotzone/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/johnny/hotzone/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Cookies from'universal-cookie';var cookies=new Cookies();export function request(_x,_x2){return _request.apply(this,arguments);}function _request(){_request=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(endpoint,params){var response,url,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:response=null;url=window.location.origin+\"/api/\"+endpoint+\"/\";_context.prev=2;_context.next=5;return fetch(url,{method:\"POST\",headers:{\"Content-Type\":\"application/json; charset=UTF-8\",Authorization:cookies.get(\"token\")?\"Token \"+cookies.get(\"token\"):\"\"},body:JSON.stringify({params:params})});case 5:response=_context.sent;_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](2);// network error\nconsole.error(_context.t0);case 11:_context.next=13;return response.json();case 13:data=_context.sent;console.log(data);return _context.abrupt(\"return\",data);case 16:case\"end\":return _context.stop();}}},_callee,null,[[2,8]]);}));return _request.apply(this,arguments);}","map":{"version":3,"sources":["/Users/johnny/hotzone/frontend/src/request.js"],"names":["Cookies","cookies","request","endpoint","params","response","url","window","location","origin","fetch","method","headers","Authorization","get","body","JSON","stringify","console","error","json","data","log"],"mappings":"uSAAA,MAAOA,CAAAA,OAAP,KAAoB,kBAApB,CAEA,GAAMC,CAAAA,OAAO,CAAG,GAAID,CAAAA,OAAJ,EAAhB,CAEA,eAAsBE,CAAAA,OAAtB,gD,qFAAO,iBAAuBC,QAAvB,CAAiCC,MAAjC,wIACDC,QADC,CACU,IADV,CAECC,GAFD,CAEOC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAyB,OAAzB,CAAmCN,QAAnC,CAA8C,GAFrD,uCAIcO,CAAAA,KAAK,CAACJ,GAAD,CAAM,CAC1BK,MAAM,CAAE,MADkB,CAE1BC,OAAO,CAAE,CACP,eAAgB,iCADT,CAEPC,aAAa,CAAEZ,OAAO,CAACa,GAAR,CAAY,OAAZ,EACX,SAAWb,OAAO,CAACa,GAAR,CAAY,OAAZ,CADA,CAEX,EAJG,CAFiB,CAQ1BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBb,MAAM,CAANA,MADmB,CAAf,CARoB,CAAN,CAJnB,QAIHC,QAJG,8FAiBH;AACAa,OAAO,CAACC,KAAR,cAlBG,+BAoBcd,CAAAA,QAAQ,CAACe,IAAT,EApBd,SAoBCC,IApBD,eAqBLH,OAAO,CAACI,GAAR,CAAYD,IAAZ,EArBK,gCAsBEA,IAtBF,sE","sourcesContent":["import Cookies from 'universal-cookie'\n\nconst cookies = new Cookies();\n\nexport async function request(endpoint, params) {\n  let response = null\n  const url = window.location.origin + \"/api/\" + endpoint + \"/\"\n  try {\n    response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n        Authorization: cookies.get(\"token\")\n          ? \"Token \" + cookies.get(\"token\")\n          : \"\",\n      },\n      body: JSON.stringify({\n        params,\n      }),\n    })\n  } catch (e) {\n    // network error\n    console.error(e)\n  }\n  const data = await response.json()\n  console.log(data)\n  return data\n  // if (data.hasOwnProperty(\"result\")) {\n  //   console.log(\"???\")\n  //   return data.result\n  // } else {\n  //   throw data.error\n  // }\n}\n"]},"metadata":{},"sourceType":"module"}