{"ast":null,"code":"import _objectSpread from\"/Users/johnny/hotzone/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/johnny/hotzone/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/johnny/hotzone/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/johnny/hotzone/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useEffect,useState,useMemo}from\"react\";import{createUseStyles}from\"react-jss\";import cn from\"classnames\";import{useRootState}from\"@/App.js\";import{request}from\"@/request.js\";import ClickAway from\"@/components/Utils/ClickAway\";import{useTable}from'react-table';import'../../table_virus.css';var tableStyle=createUseStyles({root:{width:\"100%\",display:\"flex\",flexDirection:\"column\",justifyContent:\"flex-start\",paddingLeft:30,position:\"relative\"},bigTitle:{width:\"100%\",fontSize:40,borderBottom:\"1px solid black\",fontWeight:500,marginBottom:10},selectionField:{display:\"flex\"},selectionLabel:{fontSize:20},submitBtn:{marginTop:20,width:\"10%\",height:40,color:\"white\",backgroundColor:\"black\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",fontWeight:\"bold\",cursor:\"pointer\",fontSize:20}});var VirusInfo=function VirusInfo(props){var classes=tableStyle();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),vname=_useState2[0],setVname=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),disease=_useState4[0],setDisease=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),maxp=_useState6[0],setMaxp=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),data=_useState8[0],setData=_useState8[1];var vinfo=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!maxp||!vname||!disease)){_context.next=3;break;}alert(\"Missing some fields\");return _context.abrupt(\"return\");case 3:if(!isNaN(maxp)){_context.next=6;break;}alert(\"Max inflectious period should be a number\");return _context.abrupt(\"return\");case 6:_context.next=8;return request(\"addVinfo\",{vname:vname,disease:disease,maxp:maxp});case 8:result=_context.sent;if(result===\"Success\"){setVname(\"\");setDisease(\"\");setMaxp(\"\");window.alert(\"You have successfully input the virus info.\");window.location.reload();}else{alert(\"error\");}case 10:case\"end\":return _context.stop();}}},_callee);}));return function vinfo(){return _ref.apply(this,arguments);};}();var COLUMNS=[{Header:'Virus Name',accessor:'virus_name'},{Header:'Disease',accessor:'common_name'},{Header:'Max. Infectious Period (days)',accessor:'max_infect_period'}];var columns=useMemo(function(){return COLUMNS;},[]);useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return request('getAllVirus',[]);case 2:result=_context2.sent;setData(result);case 4:case\"end\":return _context2.stop();}}},_callee2);}))();},[]);var tableInstance=useTable({columns:columns,data:data});var getTableProps=tableInstance.getTableProps,getTableBodyProps=tableInstance.getTableBodyProps,headerGroups=tableInstance.headerGroups,rows=tableInstance.rows,prepareRow=tableInstance.prepareRow;return/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.bigTitle,children:\"Virus Info Page\"}),/*#__PURE__*/_jsxs(\"div\",{className:classes.selectionField,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.selectionLabel,children:\"Virus Name: \"}),/*#__PURE__*/_jsx(\"input\",{value:vname,onChange:function onChange(e){return setVname(e.target.value);}})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:classes.selectionField,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.selectionLabel,children:\"Disease: \"}),/*#__PURE__*/_jsx(\"input\",{value:disease,onChange:function onChange(e){return setDisease(e.target.value);}})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:classes.selectionField,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.selectionLabel,children:\"Max. Infectious Period:\"}),/*#__PURE__*/_jsx(\"input\",{value:maxp,onChange:function onChange(e){return setMaxp(e.target.value);}})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:classes.submitBtn,onClick:vinfo,children:\"Submit\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),data.length>0&&/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:headerGroups.map(function(headerGroup){return/*#__PURE__*/_jsx(\"tr\",_objectSpread(_objectSpread({},headerGroup.getHeaderGroupProps()),{},{children:headerGroup.headers.map(function(column){return/*#__PURE__*/_jsx(\"th\",_objectSpread(_objectSpread({},column.getHeaderProps()),{},{children:column.render('Header')}));})}));})}),/*#__PURE__*/_jsx(\"tbody\",_objectSpread(_objectSpread({},getTableBodyProps()),{},{children:rows.map(function(row){prepareRow(row);return/*#__PURE__*/_jsx(\"tr\",_objectSpread(_objectSpread({},row.getRowProps()),{},{children:row.cells.map(function(cell){return/*#__PURE__*/_jsx(\"td\",_objectSpread(_objectSpread({},cell.getCellProps()),{},{children:cell.render('Cell')}));})}));})}))]})]});};export default VirusInfo;","map":{"version":3,"sources":["/Users/johnny/hotzone/frontend/src/components/Views/VirusInfo.js"],"names":["React","useEffect","useState","useMemo","createUseStyles","cn","useRootState","request","ClickAway","useTable","tableStyle","root","width","display","flexDirection","justifyContent","paddingLeft","position","bigTitle","fontSize","borderBottom","fontWeight","marginBottom","selectionField","selectionLabel","submitBtn","marginTop","height","color","backgroundColor","alignItems","cursor","VirusInfo","props","classes","vname","setVname","disease","setDisease","maxp","setMaxp","data","setData","vinfo","alert","isNaN","result","window","location","reload","COLUMNS","Header","accessor","columns","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","e","target","value","length","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\"\nimport { createUseStyles } from \"react-jss\"\nimport cn from \"classnames\"\nimport { useRootState } from \"@/App.js\"\nimport { request } from \"@/request.js\"\nimport ClickAway from \"@/components/Utils/ClickAway\"\n\nimport { useTable } from 'react-table'\nimport '../../table_virus.css'\n\nconst tableStyle = createUseStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    paddingLeft: 30,\n    position: \"relative\",\n  },\n  bigTitle: {\n    width: \"100%\",\n    fontSize: 40,\n    borderBottom: \"1px solid black\",\n    fontWeight: 500,\n    marginBottom: 10,\n  },\n  selectionField: {\n    display: \"flex\",\n  },\n  selectionLabel: {\n    fontSize: 20,\n  },\n  submitBtn: {\n    marginTop: 20,\n    width: \"10%\",\n    height:40,\n    color:\"white\",\n    backgroundColor: \"black\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontWeight: \"bold\",\n    cursor: \"pointer\",\n    fontSize: 20,\n  },\n})\n\n\n\nconst VirusInfo = (props) => {\n  const classes = tableStyle()\n  const [vname, setVname] = useState(\"\")\n  const [disease, setDisease] = useState(\"\")\n  const [maxp, setMaxp] = useState(\"\")\n  const [data, setData] = useState([])\n\n  const vinfo = async () => {\n    if(!maxp || !vname || !disease){\n      alert(\"Missing some fields\")\n      return\n    }\n    if(isNaN(maxp)){\n      alert(\"Max inflectious period should be a number\")\n      return\n    }\n    const result = await request(\"addVinfo\",{vname: vname, disease: disease, maxp: maxp})\n    if(result === \"Success\"){\n      setVname(\"\")\n      setDisease(\"\")\n      setMaxp(\"\")\n      window.alert(\"You have successfully input the virus info.\")\n      window.location.reload()\n    }\n    else{\n      alert(\"error\")\n    }\n    \n    \n}\n\n\n  const COLUMNS = [\n    {\n      Header: 'Virus Name',\n      accessor:'virus_name'\n    },\n    {\n      Header:'Disease',\n      accessor:'common_name'\n    },\n    {\n      Header:'Max. Infectious Period (days)',\n      accessor:'max_infect_period'\n    },\n  ]\n  const columns = useMemo(() => COLUMNS, [])\n\n  useEffect(() => {\n    (async() => {\n      const result = await request('getAllVirus',[])\n      setData(result)\n    })()\n  },[])\n\n  const tableInstance = useTable({\n    columns,\n    data,\n  })\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = tableInstance\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.bigTitle}>Virus Info Page</div>\n        <div className={classes.selectionField}>\n        <div className={classes.selectionLabel}>Virus Name: </div>\n        <input value={vname} onChange={e => setVname(e.target.value)} />\n        </div>\n        <br />\n        <div className={classes.selectionField}>\n        <div className={classes.selectionLabel}>Disease: </div>\n        <input value={disease} onChange={e => setDisease(e.target.value)} />\n        </div>\n        <br />\n        <div className={classes.selectionField}>\n        <div className={classes.selectionLabel}>Max. Infectious Period:</div>\n        <input value={maxp} onChange={e => setMaxp(e.target.value)} />\n        </div>\n        <br />\n        <div className={classes.submitBtn} onClick={vinfo}>Submit</div>\n\n      <br /><br /><br />\n\n      {\n        data.length > 0 &&\n        <table>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {\n                  headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                  ))\n                }\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row) => {\n              prepareRow(row)\n              return (\n                <tr {...row.getRowProps()}>\n                  {\n                    row.cells.map((cell) => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                    })\n                  }\n                </tr>\n              )\n            })\n            }\n          </tbody>\n        </table>\n      }\n    </div>\n  )\n}\n\nexport default VirusInfo\n"]},"metadata":{},"sourceType":"module"}