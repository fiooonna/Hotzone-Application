{"ast":null,"code":"import _objectSpread from\"/Users/johnny/hotzone/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/johnny/hotzone/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/johnny/hotzone/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/johnny/hotzone/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useEffect,useState,useMemo}from\"react\";import{createUseStyles}from\"react-jss\";import cn from\"classnames\";import{useRootState}from\"@/App.js\";import{request}from\"@/request.js\";import ClickAway from\"@/components/Utils/ClickAway\";import{useTable}from'react-table';import'../../table.css';import MOCK_DATA from'../../MOCK_DATA.json';var tableStyle=createUseStyles({root:{width:\"100%\",display:\"flex\",flexDirection:\"column\",justifyContent:\"flex-start\",paddingLeft:30,position:\"relative\"},bigTitle:{width:\"100%\",fontSize:40,borderBottom:\"1px solid black\",fontWeight:500,marginBottom:10}// selectionField: {\n//   display: \"flex\",\n// },\n// selectionLabel: {\n//   fontSize: 20,\n// },\n// nextPage: {\n//   cursor: \"pointer\",\n//   textDecoration: \" underline\",\n//   position: \"absolute\",\n//   bottom: 0,\n//   right: 20,\n// },\n});var ViewRecord=function ViewRecord(props){var classes=tableStyle();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var COLUMNS=[{Header:'CaseId',accessor:'case_no'},// {\n//   Header:'Patient Name',\n//   accessor:'patient_name'\n// },\n{Header:'Patient ID',accessor:'patient_id'},// {\n//   Header:'Virus Name',\n//   accessor:'virus_name'\n// },\n{Header:'virus ID',accessor:'virus_id'},{Header:'Date Confirmed',accessor:'date_confirmed'},{Header:'URL'}];var columns=useMemo(function(){return COLUMNS;},[]);var records=useMemo(function(){return MOCK_DATA;},[]);useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return request('viewDetail',[]);case 2:result=_context.sent;console.log(result);setData(result);case 5:case\"end\":return _context.stop();}}},_callee);}))();},[]);//not done\nconsole.log(records);var tableInstance=useTable({columns:columns,MOCK_DATA:MOCK_DATA});var getTableProps=tableInstance.getTableProps,getTableBodyProps=tableInstance.getTableBodyProps,headerGroups=tableInstance.headerGroups,rows=tableInstance.rows,prepareRow=tableInstance.prepareRow;console.log(rows);return/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:classes.bigTitle,children:\"View Record\"})}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:headerGroups.map(function(headerGroup){return/*#__PURE__*/_jsx(\"tr\",_objectSpread(_objectSpread({},headerGroup.getHeaderGroupProps()),{},{children:headerGroup.headers.map(function(column){return/*#__PURE__*/_jsx(\"th\",_objectSpread(_objectSpread({},column.getHeaderProps()),{},{children:column.render('Header')}));})}));})}),/*#__PURE__*/_jsx(\"tbody\",_objectSpread(_objectSpread({},getTableBodyProps()),{},{children:rows.map(function(row){prepareRow(row);return/*#__PURE__*/_jsx(\"tr\",_objectSpread(_objectSpread({},row.getRowProps()),{},{children:row.cells.map(function(cell){return/*#__PURE__*/_jsx(\"td\",_objectSpread(_objectSpread({},cell.getCellProps()),{},{children:cell.render('Cell')}));})}));})}))]})]});};export default ViewRecord;","map":{"version":3,"sources":["/Users/johnny/hotzone/frontend/src/components/Views/ViewRecord.js"],"names":["React","useEffect","useState","useMemo","createUseStyles","cn","useRootState","request","ClickAway","useTable","MOCK_DATA","tableStyle","root","width","display","flexDirection","justifyContent","paddingLeft","position","bigTitle","fontSize","borderBottom","fontWeight","marginBottom","ViewRecord","props","classes","data","setData","COLUMNS","Header","accessor","columns","records","result","console","log","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":"wqBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,OAArC,KAAoD,OAApD,CACA,OAASC,eAAT,KAAgC,WAAhC,CACA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CACA,OAASC,YAAT,KAA6B,UAA7B,CACA,OAASC,OAAT,KAAwB,cAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,8BAAtB,CAEA,OAASC,QAAT,KAAyB,aAAzB,CACA,MAAO,iBAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,sBAAtB,CAGA,GAAMC,CAAAA,UAAU,CAAGP,eAAe,CAAC,CACjCQ,IAAI,CAAE,CACJC,KAAK,CAAE,MADH,CAEJC,OAAO,CAAE,MAFL,CAGJC,aAAa,CAAE,QAHX,CAIJC,cAAc,CAAE,YAJZ,CAKJC,WAAW,CAAE,EALT,CAMJC,QAAQ,CAAE,UANN,CAD2B,CASjCC,QAAQ,CAAE,CACRN,KAAK,CAAE,MADC,CAERO,QAAQ,CAAE,EAFF,CAGRC,YAAY,CAAE,iBAHN,CAIRC,UAAU,CAAE,GAJJ,CAKRC,YAAY,CAAE,EALN,CAOV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BiC,CAAD,CAAlC,CA+BA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC5B,GAAMC,CAAAA,OAAO,CAAGf,UAAU,EAA1B,CAD4B,cAEJT,QAAQ,CAAC,IAAD,CAFJ,wCAErByB,IAFqB,eAEfC,OAFe,eAG5B,GAAMC,CAAAA,OAAO,CAAG,CACd,CACEC,MAAM,CAAE,QADV,CAEEC,QAAQ,CAAC,SAFX,CADc,CAKd;AACA;AACA;AACA;AACA,CACED,MAAM,CAAC,YADT,CAEEC,QAAQ,CAAC,YAFX,CATc,CAad;AACA;AACA;AACA;AACA,CACED,MAAM,CAAC,UADT,CAEEC,QAAQ,CAAC,UAFX,CAjBc,CAqBd,CACED,MAAM,CAAC,gBADT,CAEEC,QAAQ,CAAC,gBAFX,CArBc,CAyBd,CACED,MAAM,CAAC,KADT,CAzBc,CAAhB,CA6BA,GAAME,CAAAA,OAAO,CAAG7B,OAAO,CAAC,iBAAM0B,CAAAA,OAAN,EAAD,CAAgB,EAAhB,CAAvB,CACA,GAAMI,CAAAA,OAAO,CAAG9B,OAAO,CAAC,iBAAMO,CAAAA,SAAN,EAAD,CAAkB,EAAlB,CAAvB,CACAT,SAAS,CAAC,UAAM,CACd,wDAAC,oKACsBM,CAAAA,OAAO,CAAC,YAAD,CAAc,EAAd,CAD7B,QACO2B,MADP,eAECC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACAN,OAAO,CAACM,MAAD,CAAP,CAHD,sDAAD,KAKD,CANQ,CAMN,EANM,CAAT,CAMM;AAENC,OAAO,CAACC,GAAR,CAAYH,OAAZ,EACA,GAAMI,CAAAA,aAAa,CAAG5B,QAAQ,CAAC,CAC7BuB,OAAO,CAAPA,OAD6B,CAE7BtB,SAAS,CAATA,SAF6B,CAAD,CAA9B,CA3C4B,GAgD1B4B,CAAAA,aAhD0B,CAqDxBD,aArDwB,CAgD1BC,aAhD0B,CAiD1BC,iBAjD0B,CAqDxBF,aArDwB,CAiD1BE,iBAjD0B,CAkD1BC,YAlD0B,CAqDxBH,aArDwB,CAkD1BG,YAlD0B,CAmD1BC,IAnD0B,CAqDxBJ,aArDwB,CAmD1BI,IAnD0B,CAoD1BC,UApD0B,CAqDxBL,aArDwB,CAoD1BK,UApD0B,CAsD5BP,OAAO,CAACC,GAAR,CAAYK,IAAZ,EACA,mBACE,aAAK,SAAS,CAAEf,OAAO,CAACd,IAAxB,wBACE,kCACE,YAAK,SAAS,CAAEc,OAAO,CAACP,QAAxB,yBADF,EADF,cAIE,sCACE,uBAQGqB,YAAY,CAACG,GAAb,CAAiB,SAACC,WAAD,qBAChB,yCAAQA,WAAW,CAACC,mBAAZ,EAAR,eAEID,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwB,SAACI,MAAD,qBACxB,yCAAQA,MAAM,CAACC,cAAP,EAAR,eAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd,CAAlC,GADwB,EAAxB,CAFJ,GADgB,EAAjB,CARH,EADF,cAmBE,4CAAWV,iBAAiB,EAA5B,eAQGE,IAAI,CAACE,GAAL,CAAS,SAACO,GAAD,CAAS,CACjBR,UAAU,CAACQ,GAAD,CAAV,CACA,mBACE,yCAAQA,GAAG,CAACC,WAAJ,EAAR,eAEID,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAc,SAACU,IAAD,CAAU,CACxB,mBAAO,yCAAQA,IAAI,CAACC,YAAL,EAAR,eAA8BD,IAAI,CAACJ,MAAL,CAAY,MAAZ,CAA9B,GAAP,CACC,CAFD,CAFJ,GADF,CASD,CAXA,CARH,GAnBF,GAJF,GADF,CAkDD,CAzGD,CA2GA,cAAezB,CAAAA,UAAf","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\"\nimport { createUseStyles } from \"react-jss\"\nimport cn from \"classnames\"\nimport { useRootState } from \"@/App.js\"\nimport { request } from \"@/request.js\"\nimport ClickAway from \"@/components/Utils/ClickAway\"\n\nimport { useTable } from 'react-table'\nimport '../../table.css'\nimport MOCK_DATA from '../../MOCK_DATA.json'\n\n\nconst tableStyle = createUseStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    paddingLeft: 30,\n    position: \"relative\",\n  },\n  bigTitle: {\n    width: \"100%\",\n    fontSize: 40,\n    borderBottom: \"1px solid black\",\n    fontWeight: 500,\n    marginBottom: 10,\n  },\n  // selectionField: {\n  //   display: \"flex\",\n  // },\n  // selectionLabel: {\n  //   fontSize: 20,\n  // },\n  // nextPage: {\n  //   cursor: \"pointer\",\n  //   textDecoration: \" underline\",\n  //   position: \"absolute\",\n  //   bottom: 0,\n  //   right: 20,\n  // },\n\n})\nconst ViewRecord = (props) => {\n  const classes = tableStyle()\n  const [data, setData] = useState(null)\n  const COLUMNS = [\n    {\n      Header: 'CaseId',\n      accessor:'case_no'\n    },\n    // {\n    //   Header:'Patient Name',\n    //   accessor:'patient_name'\n    // },\n    {\n      Header:'Patient ID',\n      accessor:'patient_id'\n    },\n    // {\n    //   Header:'Virus Name',\n    //   accessor:'virus_name'\n    // },\n    {\n      Header:'virus ID',\n      accessor:'virus_id'\n    },\n    {\n      Header:'Date Confirmed',\n      accessor:'date_confirmed'\n    },\n    {\n      Header:'URL'\n    },\n  ]\n  const columns = useMemo(() => COLUMNS, [])\n  const records = useMemo(() => MOCK_DATA, [])\n  useEffect(() => {\n    (async() => {\n      const result = await request('viewDetail',[])\n      console.log(result)\n      setData(result)\n    })()\n  }, [])//not done\n \n  console.log(records)\n  const tableInstance = useTable({\n    columns,\n    MOCK_DATA,\n  })\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = tableInstance\n  console.log(rows)\n  return (\n    <div className={classes.root}>\n      <div>\n        <div className={classes.bigTitle}>View Record</div>\n      </div>\n      <table>\n        <thead>\n          {/* <tr>\n            <th>CaseID</th>\n            <th>PatientName</th>\n            <th>Virus</th>\n            <th>Date Confirmed</th>\n            <th>URL for more details</th>\n          </tr> */}\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {\n                headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                ))\n              }\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {/* <tr>\n            <td>dummy_ID</td>\n            <td>Dummy Chan</td>\n            <td>CoVID-19</td>\n            <td>dd-mm-yyyy</td>\n            <td><a href=\"https://www.gooogle.com\">URL</a></td>\n          </tr> */}\n          {rows.map((row) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {\n                  row.cells.map((cell) => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                  })\n                }\n              </tr>\n            )\n          })\n          }\n        </tbody>\n      </table>\n    </div>\n\n  )\n}\n\nexport default ViewRecord"]},"metadata":{},"sourceType":"module"}