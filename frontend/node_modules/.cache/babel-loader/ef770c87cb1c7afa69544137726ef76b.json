{"ast":null,"code":"import _objectSpread from\"/Users/johnny/hotzone/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/johnny/hotzone/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/johnny/hotzone/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/johnny/hotzone/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{useEffect,useState,useMemo}from\"react\";import{createUseStyles}from\"react-jss\";import cn from\"classnames\";import{useRootState}from\"@/App.js\";import{request}from\"@/request.js\";import ClickAway from\"@/components/Utils/ClickAway\";import{useCookies}from\"react-cookie\";import{useTable}from\"react-table\";var settingStyle=createUseStyles({root:{width:\"100%\",display:\"flex\",flexDirection:\"column\",justifyContent:\"flex-start\",paddingLeft:30,position:\"relative\"},bigTitle:{width:\"100%\",fontSize:40,borderBottom:\"1px solid black\",fontWeight:500,marginBottom:10},selectionField:{display:\"flex\"},selectionLabel:{fontSize:20},submitBtn:{marginTop:20,width:\"10%\",height:40,color:\"white\",backgroundColor:\"black\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",fontWeight:\"bold\",cursor:\"pointer\",fontSize:20}});var mainStyle=createUseStyles({root:{display:\"flex\",flexDirection:\"column\",position:\"relative\"},setting:{marginTop:20,width:\"10%\",height:40,color:\"white\",backgroundColor:\"grey\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",fontWeight:\"bold\",fontSize:20,cursor:\"pointer\",position:\"absolute\",right:0}});var Clustering=function Clustering(props){// const classes = clusteringStyle()\nvar _useCookies=useCookies([\"cookie-name\"]),_useCookies2=_slicedToArray(_useCookies,3),cookies=_useCookies2[0],setCookie=_useCookies2[1],removeCookie=_useCookies2[2];console.log(cookies);var _useState=useState(\"data\"),_useState2=_slicedToArray(_useState,2),currentDisplay=_useState2[0],setCurrentDispaly=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];var _useState5=useState(cookies.D||200),_useState6=_slicedToArray(_useState5,2),Dvalue=_useState6[0],setDvalue=_useState6[1];var _useState7=useState(cookies.T||3),_useState8=_slicedToArray(_useState7,2),Tvalue=_useState8[0],setTvalue=_useState8[1];var _useState9=useState(cookies.D||2),_useState10=_slicedToArray(_useState9,2),Cvalue=_useState10[0],setCvalue=_useState10[1];var classes=mainStyle();var onSettingSaved=function onSettingSaved(d,t,c){setDvalue(d);setTvalue(t);setCvalue(c);setCookie(\"D\",d);setCookie(\"T\",t);setCookie(\"C\",c);alert(\"Setting saved\");setCurrentDispaly(\"data\");};useEffect(function(){;_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return request(\"findCluster\",{Dvalue:Dvalue,Tvalue:Tvalue,Cvalue:Cvalue});case 2:result=_context.sent;if(result){setData(result.clusters);}console.log(result);case 5:case\"end\":return _context.stop();}}},_callee);}))();},[Dvalue,Tvalue,Cvalue]);var COLUMNS=[{Header:\"Location Name\",accessor:\"case_no\"},{Header:\"Patient\",accessor:\"patient_name\"},{Header:\"Virus\",accessor:\"virus_name\"},{Header:\"Date Confirmed\",accessor:\"date_confirmed\"}];var columns=useMemo(function(){return COLUMNS;},[]);var tableInstance=useTable({columns:columns,data:data});var getTableProps=tableInstance.getTableProps,getTableBodyProps=tableInstance.getTableBodyProps,headerGroups=tableInstance.headerGroups,rows=tableInstance.rows,prepareRow=tableInstance.prepareRow;return/*#__PURE__*/_jsxs(_Fragment,{children:[currentDisplay===\"data\"&&/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.setting,onClick:function onClick(){return setCurrentDispaly(\"setting\");},children:[\" \",\"Setting\"]}),data.length>0(/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:headerGroups.map(function(headerGroup){return/*#__PURE__*/_jsx(\"tr\",_objectSpread(_objectSpread({},headerGroup.getHeaderGroupProps()),{},{children:headerGroup.headers.map(function(column){return/*#__PURE__*/_jsx(\"th\",_objectSpread(_objectSpread({},column.getHeaderProps()),{},{children:column.render(\"Header\")}));})}));})}),/*#__PURE__*/_jsx(\"tbody\",_objectSpread(_objectSpread({},getTableBodyProps()),{},{children:rows.map(function(row){prepareRow(row);return/*#__PURE__*/_jsx(\"tr\",_objectSpread(_objectSpread({},row.getRowProps()),{},{className:classes.row,children:row.cells.map(function(cell){return/*#__PURE__*/_jsx(\"td\",_objectSpread(_objectSpread({},cell.getCellProps()),{},{children:cell.render(\"Cell\")}));})}));})}))]}))]}),currentDisplay===\"setting\"&&/*#__PURE__*/_jsx(Setting,{onSettingSaved:onSettingSaved})]});};var Setting=function Setting(props){var classes=settingStyle();var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),Dvalue=_useState12[0],setDvalue=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),Tvalue=_useState14[0],setTvalue=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),Cvalue=_useState16[0],setCvalue=_useState16[1];var clustering_func=function clustering_func(){if(!Dvalue||!Tvalue||!Cvalue){alert(\"Missing some fields\");}else if(isNaN(Dvalue)||isNaN(Tvalue)||isNaN(Cvalue)){alert(\"All the fields should be a number.\");}else{props.onSettingSaved(Dvalue,Tvalue,Cvalue);}};return/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.bigTitle,children:\"Setting\"}),/*#__PURE__*/_jsxs(\"div\",{className:classes.selectionField,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.selectionLabel,children:\"D value(in meter): \"}),/*#__PURE__*/_jsx(\"input\",{value:Dvalue,onChange:function onChange(e){return setDvalue(e.target.value);}})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:classes.selectionField,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.selectionLabel,children:\"T value(in day): \"}),/*#__PURE__*/_jsx(\"input\",{value:Tvalue,onChange:function onChange(e){return setTvalue(e.target.value);}})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:classes.selectionField,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.selectionLabel,children:\"C value(cluster size):\"}),/*#__PURE__*/_jsx(\"input\",{value:Cvalue,onChange:function onChange(e){return setCvalue(e.target.value);}})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:classes.submitBtn,onClick:clustering_func,children:\"Save\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]});};export default Clustering;","map":{"version":3,"sources":["/Users/johnny/hotzone/frontend/src/components/Views/Clustering.js"],"names":["React","useEffect","useState","useMemo","createUseStyles","cn","useRootState","request","ClickAway","useCookies","useTable","settingStyle","root","width","display","flexDirection","justifyContent","paddingLeft","position","bigTitle","fontSize","borderBottom","fontWeight","marginBottom","selectionField","selectionLabel","submitBtn","marginTop","height","color","backgroundColor","alignItems","cursor","mainStyle","setting","right","Clustering","props","cookies","setCookie","removeCookie","console","log","currentDisplay","setCurrentDispaly","data","setData","D","Dvalue","setDvalue","T","Tvalue","setTvalue","Cvalue","setCvalue","classes","onSettingSaved","d","t","c","alert","result","clusters","COLUMNS","Header","accessor","columns","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","length","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","Setting","clustering_func","isNaN","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\"\nimport { createUseStyles } from \"react-jss\"\nimport cn from \"classnames\"\nimport { useRootState } from \"@/App.js\"\nimport { request } from \"@/request.js\"\nimport ClickAway from \"@/components/Utils/ClickAway\"\nimport { useCookies } from \"react-cookie\"\nimport { useTable } from \"react-table\"\n\nconst settingStyle = createUseStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    paddingLeft: 30,\n    position: \"relative\",\n  },\n  bigTitle: {\n    width: \"100%\",\n    fontSize: 40,\n    borderBottom: \"1px solid black\",\n    fontWeight: 500,\n    marginBottom: 10,\n  },\n  selectionField: {\n    display: \"flex\",\n  },\n  selectionLabel: {\n    fontSize: 20,\n  },\n  submitBtn: {\n    marginTop: 20,\n    width: \"10%\",\n    height: 40,\n    color: \"white\",\n    backgroundColor: \"black\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontWeight: \"bold\",\n    cursor: \"pointer\",\n    fontSize: 20,\n  },\n})\n\nconst mainStyle = createUseStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n  },\n  setting: {\n    marginTop: 20,\n    width: \"10%\",\n    height: 40,\n    color: \"white\",\n    backgroundColor: \"grey\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontWeight: \"bold\",\n    fontSize: 20,\n    cursor: \"pointer\",\n    position: \"absolute\",\n    right: 0,\n  },\n})\n\nconst Clustering = (props) => {\n  // const classes = clusteringStyle()\n  const [cookies, setCookie, removeCookie] = useCookies([\"cookie-name\"])\n  console.log(cookies)\n  const [currentDisplay, setCurrentDispaly] = useState(\"data\")\n  const [data, setData] = useState([])\n  const [Dvalue, setDvalue] = useState(cookies.D || 200)\n  const [Tvalue, setTvalue] = useState(cookies.T || 3)\n  const [Cvalue, setCvalue] = useState(cookies.D || 2)\n\n  const classes = mainStyle()\n  const onSettingSaved = (d, t, c) => {\n    setDvalue(d)\n    setTvalue(t)\n    setCvalue(c)\n    setCookie(\"D\", d)\n    setCookie(\"T\", t)\n    setCookie(\"C\", c)\n    alert(\"Setting saved\")\n    setCurrentDispaly(\"data\")\n  }\n\n  useEffect(() => {\n    ;(async () => {\n      const result = await request(\"findCluster\", {\n        Dvalue: Dvalue,\n        Tvalue: Tvalue,\n        Cvalue: Cvalue,\n      })\n      if (result) {\n        setData(result.clusters)\n      }\n      console.log(result)\n    })()\n  }, [Dvalue, Tvalue, Cvalue])\n\n  const COLUMNS = [\n    {\n      Header: \"Location Name\",\n      accessor: \"case_no\",\n    },\n    {\n      Header: \"Patient\",\n      accessor: \"patient_name\",\n    },\n    {\n      Header: \"Virus\",\n      accessor: \"virus_name\",\n    },\n    {\n      Header: \"Date Confirmed\",\n      accessor: \"date_confirmed\",\n    },\n  ]\n  const columns = useMemo(() => COLUMNS, [])\n  const tableInstance = useTable({\n    columns,\n    data,\n  })\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = tableInstance\n\n  return (\n    <>\n      {currentDisplay === \"data\" && (\n        <div className={classes.root}>\n          <div\n            className={classes.setting}\n            onClick={() => setCurrentDispaly(\"setting\")}\n          >\n            {\" \"}\n            Setting\n          </div>\n          {data.length > 0\n            (\n              <table>\n                <thead>\n                  {headerGroups.map((headerGroup) => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                      {headerGroup.headers.map((column) => (\n                        <th {...column.getHeaderProps()}>\n                          {column.render(\"Header\")}\n                        </th>\n                      ))}\n                    </tr>\n                  ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                  {rows.map((row) => {\n                    prepareRow(row)\n                    return (\n                      <tr {...row.getRowProps()} className={classes.row}>\n                        {row.cells.map((cell) => {\n                          return (\n                            <td {...cell.getCellProps()}>\n                              {cell.render(\"Cell\")}\n                            </td>\n                          )\n                        })}\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            )}\n        </div>\n      )}\n      {currentDisplay === \"setting\" && (\n        <Setting onSettingSaved={onSettingSaved} />\n      )}\n    </>\n  )\n}\n\nconst Setting = (props) => {\n  const classes = settingStyle()\n  const [Dvalue, setDvalue] = useState(\"\")\n  const [Tvalue, setTvalue] = useState(\"\")\n  const [Cvalue, setCvalue] = useState(\"\")\n\n  const clustering_func = () => {\n    if (!Dvalue || !Tvalue || !Cvalue) {\n      alert(\"Missing some fields\")\n    } else if (isNaN(Dvalue) || isNaN(Tvalue) || isNaN(Cvalue)) {\n      alert(\"All the fields should be a number.\")\n    } else {\n      props.onSettingSaved(Dvalue, Tvalue, Cvalue)\n    }\n  }\n  return (\n    <div className={classes.root}>\n      <div className={classes.bigTitle}>Setting</div>\n      <div className={classes.selectionField}>\n        <div className={classes.selectionLabel}>D value(in meter): </div>\n        <input value={Dvalue} onChange={(e) => setDvalue(e.target.value)} />\n      </div>\n      <br />\n      <div className={classes.selectionField}>\n        <div className={classes.selectionLabel}>T value(in day): </div>\n        <input value={Tvalue} onChange={(e) => setTvalue(e.target.value)} />\n      </div>\n      <br />\n      <div className={classes.selectionField}>\n        <div className={classes.selectionLabel}>C value(cluster size):</div>\n        <input value={Cvalue} onChange={(e) => setCvalue(e.target.value)} />\n      </div>\n      <br />\n      <div className={classes.submitBtn} onClick={clustering_func}>\n        Save\n      </div>\n\n      <br />\n      <br />\n      <br />\n    </div>\n  )\n}\nexport default Clustering\n"]},"metadata":{},"sourceType":"module"}